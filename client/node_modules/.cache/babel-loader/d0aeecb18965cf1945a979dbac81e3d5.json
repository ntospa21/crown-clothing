{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/Ntos/crown-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"C:/Users/Ntos/crown-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"C:/Users/Ntos/crown-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import firebase from'firebase/app';import'firebase/firestore';import'firebase/auth';var config={apiKey:\"AIzaSyAe3D1xCXVeFS9A_jc7Bq_uB_fao5141Ts\",authDomain:\"crwn-db-9b5fd.firebaseapp.com\",databaseURL:\"https://crwn-db-9b5fd-default-rtdb.firebaseio.com\",projectId:\"crwn-db-9b5fd\",storageBucket:\"crwn-db-9b5fd.appspot.com\",messagingSenderId:\"725902458421\",appId:\"1:725902458421:web:cc360e37be048ea1493b7c\",measurementId:\"G-P8B500VZ6X\"};export var createUserProfileDocument=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(userAuth,additionalData){var userRef,snapShot,displayName,email,createdAt;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(userAuth){_context.next=2;break;}return _context.abrupt(\"return\");case 2:userRef=firestore.doc(\"users/\".concat(userAuth.uid));_context.next=5;return userRef.get();case 5:snapShot=_context.sent;if(snapShot.exists){_context.next=17;break;}displayName=userAuth.displayName,email=userAuth.email;createdAt=new Date();_context.prev=9;_context.next=12;return userRef.set(_objectSpread({displayName:displayName,email:email,createdAt:createdAt},additionalData));case 12:_context.next=17;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](9);console.log('error creating user',_context.t0.message);case 17:return _context.abrupt(\"return\",userRef);case 18:case\"end\":return _context.stop();}}},_callee,null,[[9,14]]);}));return function createUserProfileDocument(_x,_x2){return _ref.apply(this,arguments);};}();firebase.initializeApp(config);export var auth=firebase.auth();export var firestore=firebase.firestore();var provider=new firebase.auth.GoogleAuthProvider();provider.setCustomParameters({prompt:'select_account'});export var signInWithGoogle=function signInWithGoogle(){return auth.signInWithPopup(provider);};export default firebase;","map":{"version":3,"sources":["C:/Users/Ntos/crown-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","get","snapShot","exists","displayName","email","createdAt","Date","set","console","log","message","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"qbAAA,MAAOA,CAAAA,QAAP,KAAqB,cAArB,CACA,MAAO,oBAAP,CACA,MAAO,eAAP,CAEA,GAAMC,CAAAA,MAAM,CAAG,CACbC,MAAM,CAAE,yCADK,CAEbC,UAAU,CAAE,+BAFC,CAGbC,WAAW,CAAE,mDAHA,CAIbC,SAAS,CAAE,eAJE,CAKbC,aAAa,CAAE,2BALF,CAMbC,iBAAiB,CAAE,cANN,CAObC,KAAK,CAAE,2CAPM,CAQbC,aAAa,CAAE,cARF,CAAf,CAYA,MAAO,IAAMC,CAAAA,yBAAyB,0FAAG,iBAAMC,QAAN,CAAgBC,cAAhB,sKAClCD,QADkC,iEAGjCE,OAHiC,CAGvBC,SAAS,CAACC,GAAV,iBAAuBJ,QAAQ,CAACK,GAAhC,EAHuB,uBAIhBH,CAAAA,OAAO,CAACI,GAAR,EAJgB,QAIjCC,QAJiC,kBAMlCA,QAAQ,CAACC,MANyB,0BAO9BC,WAP8B,CAOPT,QAPO,CAO9BS,WAP8B,CAOjBC,KAPiB,CAOPV,QAPO,CAOjBU,KAPiB,CAQ/BC,SAR+B,CAQnB,GAAIC,CAAAA,IAAJ,EARmB,wCAW7BV,CAAAA,OAAO,CAACW,GAAR,gBACJJ,WAAW,CAAXA,WADI,CAEJC,KAAK,CAALA,KAFI,CAGJC,SAAS,CAATA,SAHI,EAIDV,cAJC,EAX6B,0FAkBnCa,OAAO,CAACC,GAAR,CAAY,qBAAZ,CAAmC,YAAMC,OAAzC,EAlBmC,wCAqBhCd,OArBgC,uEAAH,kBAAzBH,CAAAA,yBAAyB,gDAA/B,CAuBPV,QAAQ,CAAC4B,aAAT,CAAuB3B,MAAvB,EAEA,MAAO,IAAM4B,CAAAA,IAAI,CAAG7B,QAAQ,CAAC6B,IAAT,EAAb,CACP,MAAO,IAAMf,CAAAA,SAAS,CAAGd,QAAQ,CAACc,SAAT,EAAlB,CAEP,GAAMgB,CAAAA,QAAQ,CAAG,GAAI9B,CAAAA,QAAQ,CAAC6B,IAAT,CAAcE,kBAAlB,EAAjB,CACAD,QAAQ,CAACE,mBAAT,CAA6B,CAAEC,MAAM,CAAE,gBAAV,CAA7B,EACA,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,SAAML,CAAAA,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAAN,EAAzB,CAEP,cAAe9B,CAAAA,QAAf","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyAe3D1xCXVeFS9A_jc7Bq_uB_fao5141Ts\",\r\n  authDomain: \"crwn-db-9b5fd.firebaseapp.com\",\r\n  databaseURL: \"https://crwn-db-9b5fd-default-rtdb.firebaseio.com\",\r\n  projectId: \"crwn-db-9b5fd\",\r\n  storageBucket: \"crwn-db-9b5fd.appspot.com\",\r\n  messagingSenderId: \"725902458421\",\r\n  appId: \"1:725902458421:web:cc360e37be048ea1493b7c\",\r\n  measurementId: \"G-P8B500VZ6X\"\r\n};\r\n\r\n\r\nexport const createUserProfileDocument = async(userAuth, additionalData) => {\r\n  if (!userAuth) return;\r\n\r\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n  const snapShot = await userRef.get();\r\n  \r\n  if (!snapShot.exists){\r\n    const {displayName, email } = userAuth;\r\n    const createdAt = new Date ();\r\n\r\n    try {\r\n      await userRef.set({\r\n        displayName,\r\n        email,\r\n        createdAt,\r\n        ...additionalData\r\n      })\r\n    } catch(error) {\r\n      console.log('error creating user', error.message);\r\n    }\r\n  }\r\n  return userRef;\r\n};\r\nfirebase.initializeApp(config);\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({ prompt: 'select_account' });\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\nexport default firebase;"]},"metadata":{},"sourceType":"module"}